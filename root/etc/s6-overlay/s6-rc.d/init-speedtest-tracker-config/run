#!/usr/bin/with-contenv bash
# shellcheck shell=bash

lsiown abc:abc \
    /config

if [[ "${DB_CONNECTION:=sqlite}" = "sqlite" ]]; then
    if [[ -n "${DB_DATABASE}" ]]; then
        if [[ ! -e "${DB_DATABASE}" ]]; then
            touch "${DB_DATABASE}"
            lsiown abc:abc "${DB_DATABASE}"
        fi
    else
        touch /config/database.sqlite
        if [[ -e "/app/www/database/database.sqlite" && ! -L "/app/www/database/database.sqlite" ]]; then
            rm -rf "/app/www/database/database.sqlite"
        fi
        if [[ ! -L "/app/www/database/database.sqlite" ]]; then
            ln -s "/config/database.sqlite" "/app/www/database/database.sqlite"
        fi
        lsiown abc:abc /app/www/database/database.sqlite
    fi
    export DB_CONNECTION=sqlite
    echo "sqlite" > /run/s6/container_environment/DB_CONNECTION
elif [[ "${DB_CONNECTION}" = "mysql" ]]; then
    echo "Waiting for DB to be available"
    END=$((SECONDS + 30))
    while [[ ${SECONDS} -lt ${END} ]] && [[ -n "${DB_HOST+x}" ]]; do
        if [[ $(/usr/bin/nc -w1 "${DB_HOST}" "${DB_PORT}" | tr -d '\0') ]]; then
            if [[ ! -f /dbwait.lock ]]; then
                sleep 5
            fi
            touch /dbwait.lock
            break
        else
            sleep 1
        fi
    done
elif [[ "${DB_CONNECTION}" = "pgsql" ]]; then
    echo "Waiting for DB to be available"
    END=$((SECONDS + 30))
    while [[ ${SECONDS} -lt ${END} ]] && [[ -n "${DB_HOST+x}" ]]; do
        if pg_isready -h "${DB_HOST}" -p "${DB_PORT}" -U "${DB_USERNAME}" -q; then
            if [[ ! -f /dbwait.lock ]]; then
                sleep 5
            fi
            touch /dbwait.lock
            break
        else
            sleep 1
        fi
    done
fi

lsiown -R abc:abc \
    /app/www/bootstrap/cache \
    /app/www/storage

# Check for env file
if [[ -f /config/.env ]]; then
    if [[ -e "/app/www/.env" && ! -L "/app/www/.env" ]]; then
        rm -rf "/app/www/.env"
    fi
    if [[ ! -L "/app/www/.env" ]]; then
        ln -s "/config/.env" "/app/www/.env"
    fi
fi

touch /config/log/laravel.log

if [[ -e "/app/www/storage/logs/laravel.log" && ! -L "/app/www/storage/logs/laravel.log" ]]; then
    rm -rf "/app/www/storage/logs/laravel.log"
fi
if [[ ! -L "/app/www/storage/logs/laravel.log" ]]; then
    ln -s "/config/log/laravel.log" "/app/www/storage/logs/laravel.log"
fi

# Check for app key
if [[ -z ${APP_KEY} ]]; then
    if ! grep -qE "APP_KEY=[0-9A-Za-z:+\/=]{1,}" /app/www/.env 2> /dev/null; then
        echo "An application key is missing, halting init!"
        echo "You can generate a key at https://speedtest-tracker.dev/."
        sleep infinity
    fi
fi

# Build cache
s6-setuidgid abc php /app/www/artisan optimize --no-ansi -q
s6-setuidgid abc php /app/www/artisan filament:cache-components --no-ansi -q

# Migrate database
s6-setuidgid abc php /app/www/artisan migrate --force --no-ansi -q

lsiown -R abc:abc \
    /config
